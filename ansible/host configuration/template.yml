AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This stack creates:
  - 1x EC2 instance with ansible installation [ansible management node]
  - 2x EC2 instances functioning as hosts node [ansible hosts TODO: TO BE CONFIGURED]

  PREREQUISITES:
  - create security group for ssh [optional: could be created on this template]
  - create access key to ssh into the instances [mandatory]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: SecurityParameters
        Parameters:
          - SecurityGroupID
          - KeyPairName
      - Label:
          default: ManagementNode
        Parameters:
          - ManagementNodeInstanceType
      - Label:
          default: HostNode1
        Parameters:
          - HostInstance1Type
          - HostInstance1AMI
      - Label:
          default: HostNode2
        Parameters:
          - HostInstance2Type
          - HostInstance2AMI

    ParameterLabels:
      ManagementNodeInstanceType:
        default: Instance type of the Ansible Management Node
      HostInstance1Type:
        default: Instance type of the  Host \#1
      HostInstance1AMI:
        default: AMI image of the  Host \#1
      HostInstance2Type:
        default: Instance type of the  Host \#2
      HostInstance2AMI:
        default: AMI image of the  Host \#2

Parameters:
  SecurityGroupID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group for the EC2 instances
  
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

  ManagementNodeInstanceType:
    Type: String
    Description: EC2 Instance type for Ansible Management Node
    AllowedValues: [t2.micro]

  HostInstance1Type:
    Type: String
    Description: EC2 Instance type for Ansible Host 1
    AllowedValues: [t2.micro]
  
  HostInstance1AMI:
    Type: String
    Description: Choose linux or win
    AllowedValues: [linux, win]
  
  HostInstance2Type:
    Type: String
    Description: EC2 Instance type for Ansible Host 2
    AllowedValues: [t2.micro]

  HostInstance2AMI:
    Type: String
    Description: Choose linux or win
    AllowedValues: [linux, win]


Mappings:
  AWSRegionToAMI:
    eu-central-1:
      linux: 'ami-013fffc873b1eaa1c'
      win: 'ami-0fbc0724a0721c688'

Resources:

  ManagementNode:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'ManagementNode' 
      ImageId: 
        !FindInMap 
          - AWSRegionToAMI
          - !Ref 'AWS::Region'
          - linux
      InstanceType: !Ref ManagementNodeInstanceType
      KeyName: KeyPairName
      SecurityGroupIds:
        - !Ref SecurityGroupID
      UserData:
        Fn::Base64: |
              #!/bin/bash -ex
              amazon-linux-extras install epel
              yum update -y
              yum install ansible -y
              yum install nginx -y
              yum install git -y
              yum install python3 python3-devel python3-pip -y
              pip3 install boto boto3 botocore
              systemctl start nginx
              systemctl enable nginx

  HostInstance1:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'HostNode-1' 
      ImageId: 
        !FindInMap 
          - AWSRegionToAMI
          - !Ref AWS::Region
          - !Ref HostInstance1AMI
      InstanceType: !Ref HostInstance1Type
      KeyName: KeyPairName
      SecurityGroupIds: 
      - !Ref SecurityGroupID

  HostInstance2:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'HostNode2' 
      ImageId:
        !FindInMap 
          - AWSRegionToAMI
          - !Ref AWS::Region
          - !Ref HostInstance2AMI
      InstanceType: !Ref HostInstance2Type
      KeyName: KeyPairName
      SecurityGroupIds: 
      - !Ref SecurityGroupID

Outputs:
  ManagementNodeId:
    Description: The Management Node Instance ID
    Value: !Ref ManagementNode
  
  HostInstance1ID:
    Description: Host1 Instance ID 
    Value: !Ref HostInstance1

  HostInstance2ID:
    Description: Host2 Instance ID 
    Value: !Ref HostInstance2
